# This is a basic workflow to help you get started with Actions

name: Build and push the tagged build to production

permissions:
  id-token: write # Required for requesting the JWT
  contents: read  # Required for actions/checkout

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    tags:
      - 'v**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_push_image:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4.1.1

      - name: Fetch latest version
        id: fetch_version
        run: echo ::set-output name=TAG::${GITHUB_REF#refs/tags/}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3.1.0

      - name: Docker Login
        uses: docker/login-action@v3.0.0
        with:
          registry: ${{ secrets.ACR_NAME }}.azurecr.io
          username: ${{ secrets.ACR_LOGIN }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build and push production images
        uses: docker/build-push-action@v5.1.0
        with:
          context: .
          tags: ${{secrets.ACR_NAME}}.azurecr.io/contoso-website:latest,${{secrets.ACR_NAME}}.azurecr.io/contoso-website:${{ steps.fetch_version.outputs.TAG }}
          push: true

  deploy: 
    runs-on: ubuntu-latest
    needs: build_push_image  # Waits for the execution of the previous job
    steps:
      - uses: actions/checkout@v4.1.1
      
      - name: Install Helm
        uses: Azure/setup-helm@v4
        with:
          version: v3.14.2

      - name: Sign in to Azure with OIDC
        uses: Azure/login@v2
        with:
          # ClientId of the Azure Service principal created.
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          # TenantId of the Azure Service principal created.
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          # Azure subscriptionId
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Azure Kubernetes set context
        uses: Azure/aks-set-context@v3
        with:
          # Resource Group Name
          resource-group:  ${{ secrets.RESOURCE_GROUP }}
          # AKS Cluster Name
          cluster-name: ${{ secrets.CLUSTER_NAME }}     

      - name: Run Helm Deploy
        run: |
          helm upgrade \
            --install \
            --create-namespace \
            --atomic \
            --wait \
            --namespace staging \
            contoso-website \
            ./kubernetes/contoso-website \
            --set image.repository=${{ secrets.ACR_NAME }} \
            --set dns.name=${{ secrets.DNS_NAME }}
